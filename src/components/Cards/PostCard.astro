---
import { urlFor } from '../../lib/sanity'
import type { Post } from '../../lib/sanity'
import Image from 'astro/components/Image.astro'

interface Props {
  post: Post
}

const { post } = Astro.props
---

<a
  href={`/posts/${post.slug.current}`}
  class='group block relative overflow-hidden transition-all duration-300 rounded-lg'>
  {
    post.mainImage ? (
      <div class='w-full h-64 overflow-hidden'>
        <Image
          src={urlFor(post.mainImage).width(800).url()}
          alt={post.title}
          width={800}
          height={600}
          loading='lazy'
          decoding='async'
          class='object-cover w-full h-full transition-transform duration-300 group-hover:scale-105'
        />
      </div>
    ) : (
      <div class='w-full h-64 flex items-center justify-center bg-zinc-100 dark:bg-zinc-800 text-4xl'>
        üìù
      </div>
    )
  }
  <div class='flex flex-col h-32 justify-between'>
    <div>
      {
        post.category && (
          <span class='inline-block mb-1 px-2 py-0.5 text-xs font-semibold bg-zinc-200 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 rounded'>
            {post.category}
          </span>
        )
      }
      <h3 class='text-lg font-medium truncate'>{post.title}</h3>
      {
        post.description && (
          <p class='mt-2 text-sm text-zinc-600 dark:text-zinc-400 line-clamp-2'>
            {post.description}
          </p>
        )
      }
    </div>
    <div class='flex items-center gap-4 mt-2 text-xs text-zinc-500 dark:text-zinc-400'>
      {
        post.publishedAt && (
          <span>
            {new Date(post.publishedAt).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'short',
              day: 'numeric',
            })}
          </span>
        )
      }
      {typeof post.views === 'number' && post.views > 0 && <span>{post.views} views</span>}
    </div>
  </div>
</a>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>
