---
import { urlFor } from '../../lib/sanity'
import type { SanityImage as SanityImageType } from '../../lib/sanity'
import { imageQualityPresets, getQualityForSize } from '../../lib/imageQuality'

interface Props {
  image: SanityImageType
  alt: string
  width?: number
  height?: number
  class?: string
  sizes?: string
  quality?: number
  preset?: keyof typeof imageQualityPresets
  format?: 'avif' | 'webp' | 'jpeg' | 'png'
}

const {
  image,
  alt,
  width = 800,
  height = 600,
  class: className = '',
  sizes = '(min-width: 1024px) 1024px, 100vw',
  quality: customQuality,
  preset = 'standard',
  format: customFormat,
} = Astro.props

// Get quality settings from preset or custom values
const presetSettings = imageQualityPresets[preset]
const quality = customQuality || presetSettings.quality
const format = customFormat || presetSettings.format

// Generate image URL with optimizations
const imageUrl = urlFor(image).width(width).quality(quality).auto('format').fit('max').url()

// Generate srcset for responsive images with quality scaling and Retina support
const widths = [400, 800, 1200, 1600, 2400, 3200]
const srcset = widths
  .map((w) => {
    const responsiveQuality = getQualityForSize(w)
    const url = urlFor(image).width(w).quality(responsiveQuality).auto('format').fit('max').url()
    return `${url} ${w}w`
  })
  .join(', ')
---

<img
  src={imageUrl}
  alt={alt}
  width={width}
  height={height}
  class={className}
  loading='lazy'
  decoding='async'
  srcset={srcset}
  sizes={sizes}
/>
