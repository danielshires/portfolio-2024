---
import { urlFor } from '../../lib/sanity'
import type { Project } from '../../lib/sanity'

interface Props {
  projects: Project[]
}

const { projects } = Astro.props
---

<section class="space-y-8">
  <div class="text-center space-y-4">
    <h2 class="text-2xl md:text-3xl font-bold text-zinc-900 dark:text-zinc-100">
      Related Projects
    </h2>
    <p class="text-lg text-zinc-600 dark:text-zinc-400 max-w-2xl mx-auto">
      Explore more of my work
    </p>
  </div>
  
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {projects.map((project, index) => (
      <article 
        class="group cursor-pointer"
        style={`animation-delay: ${index * 0.1}s`}
      >
        <a href={`/projects/${project.slug.current}`} class="block space-y-4">
          <!-- Project Image -->
          <div class="aspect-video w-full overflow-hidden rounded-lg bg-zinc-100 dark:bg-zinc-800 group-hover:shadow-lg transition-shadow duration-300">
            {project.heroImage ? (
              <img
                src={urlFor(project.heroImage).width(400).height(225).url()}
                alt={project.title + ' preview'}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                loading="lazy"
              />
            ) : (
              <div class="w-full h-full flex items-center justify-center">
                <div class="text-zinc-400 dark:text-zinc-600">
                  <svg class="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                </div>
              </div>
            )}
          </div>
          
          <!-- Project Details -->
          <div class="space-y-2">
            <!-- Tags -->
            {project.tags && project.tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {project.tags.slice(0, 2).map((tag) => (
                  <span class="text-xs uppercase tracking-wider text-zinc-500 dark:text-zinc-400 bg-zinc-100 dark:bg-zinc-800 px-2 py-1 rounded">
                    {tag}
                  </span>
                ))}
              </div>
            )}
            
            <!-- Title and Client -->
            <div class="space-y-1">
              <h3 class="text-lg font-semibold text-zinc-900 dark:text-zinc-100 group-hover:text-zinc-600 dark:group-hover:text-zinc-300 transition-colors">
                {project.title}
              </h3>
              
              {project.client && (
                <p class="text-sm text-zinc-600 dark:text-zinc-400">
                  {project.client}
                </p>
              )}
              
              {project.subtitle && (
                <p class="text-sm text-zinc-600 dark:text-zinc-400 line-clamp-2">
                  {project.subtitle}
                </p>
              )}
            </div>
            
            <!-- Year -->
            {project.year && (
              <p class="text-xs uppercase tracking-wider text-zinc-500 dark:text-zinc-400">
                {project.year}
              </p>
            )}
          </div>
        </a>
      </article>
    ))}
  </div>
</section>

<style>
  /* Animation for project cards */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  article {
    animation: fadeInUp 0.6s ease-out both;
  }
  
  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .grid {
      grid-template-columns: 1fr;
    }
  }
  
  @media (min-width: 768px) and (max-width: 1024px) {
    .grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>