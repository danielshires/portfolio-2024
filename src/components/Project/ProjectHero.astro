---
import { urlFor } from '../../lib/sanity'
import type { SanityImage } from '../../lib/sanity'

interface Props {
  title: string
  subtitle?: string
  heroImage?: SanityImage
}

const { title, subtitle, heroImage } = Astro.props
---

<div class="space-y-8">
  <!-- Hero Image -->
  {heroImage && (
    <div class="aspect-video w-full overflow-hidden rounded-lg shadow-lg bg-zinc-100 dark:bg-zinc-800">
      <img
        src={urlFor(heroImage).width(1200).height(675).url()}
        alt={title + ' hero image'}
        class="w-full h-full object-cover"
        loading="eager"
      />
    </div>
  )}

  <!-- Title and Subtitle -->
  <div class="space-y-4 text-center md:text-left">
    <h1 
      id="project-title"
      class="text-3xl md:text-4xl lg:text-5xl font-bold text-zinc-900 dark:text-zinc-100 leading-tight"
    >
      {title}
    </h1>
    
    {subtitle && (
      <p 
        id="project-subtitle"
        class="text-lg md:text-xl text-zinc-600 dark:text-zinc-300 leading-relaxed max-w-3xl"
      >
        {subtitle}
      </p>
    )}
  </div>
</div>

<script>
  import gsap from 'gsap'
  import { SplitText } from 'gsap/SplitText'

  // Register GSAP plugins
  gsap.registerPlugin(SplitText)

  function projectHeroAnimation() {
    // Check if animation has already played
    const hasPlayed = sessionStorage.getItem('hasProjectHeroPlayed')
    
    if (!hasPlayed) {
      const title = document.getElementById('project-title')
      const subtitle = document.getElementById('project-subtitle')

      if (!title) return

      const tl = gsap.timeline()

      // Split text for animation
      let titleSplit, subtitleSplit
      
      try {
        titleSplit = new SplitText(title, { type: 'lines' })
        if (subtitle) {
          subtitleSplit = new SplitText(subtitle, { type: 'lines' })
        }
      } catch (error) {
        console.warn('SplitText failed for project hero:', error)
        return
      }

      // Set initial states
      gsap.set(titleSplit.lines, {
        clipPath: 'inset(100% 0 0 0)',
        opacity: 0,
      })

      if (subtitleSplit) {
        gsap.set(subtitleSplit.lines, {
          clipPath: 'inset(100% 0 0 0)',
          opacity: 0,
        })
      }

      // Animation sequence
      tl.to(titleSplit.lines, {
        clipPath: 'inset(0% 0 0 0)',
        opacity: 1,
        duration: 0.8,
        stagger: 0.1,
        ease: 'power2.out',
      })

      if (subtitleSplit) {
        tl.to(subtitleSplit.lines, {
          clipPath: 'inset(0% 0 0 0)',
          opacity: 1,
          duration: 0.6,
          stagger: 0.05,
          ease: 'power2.out',
        }, '-=0.3')
      }

      sessionStorage.setItem('hasProjectHeroPlayed', 'true')
    }
  }

  // Run animation when page loads
  window.addEventListener('load', () => {
    requestAnimationFrame(projectHeroAnimation)
  })
</script>