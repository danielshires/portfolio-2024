---
import { combineButtonStyles } from './button-styles'
import type { AstroButtonProps } from './types'

interface Props extends AstroButtonProps {}

const {
  variant = 'primary',
  size = 'md',
  className,
  disabled = false,
  loading = false,
  href,
  target = '_self',
  type = 'button',
  as = href ? 'a' : 'button',
  rel,
  'data-swup-preload': swupPreload,
  'aria-label': ariaLabel,
  id,
  ...rest
} = Astro.props

const combinedClassName = combineButtonStyles(variant, size, className)

// Determine if it's an internal link for Swup preloading
const isInternal = href && href.startsWith('/') && !href.startsWith('//')
const shouldPreload = swupPreload !== undefined ? swupPreload : isInternal

// Common props for all elements
const commonProps = {
  class: combinedClassName,
  disabled: disabled || loading,
  'aria-label': ariaLabel,
  id,
  ...rest
}

// Button-specific props
const buttonProps = {
  ...commonProps,
  type,
}

// Link-specific props
const linkProps = {
  ...commonProps,
  href,
  target,
  rel,
  'data-swup-preload': shouldPreload,
}
---

{as === 'button' && (
  <button {...buttonProps}>
    {loading && (
      <svg class="animate-spin -ml-1 mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    )}
    <slot />
  </button>
)}

{as === 'a' && (
  <a {...linkProps}>
    {loading && (
      <svg class="animate-spin -ml-1 mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    )}
    <slot />
  </a>
)}

{as === 'div' && (
  <div {...commonProps}>
    {loading && (
      <svg class="animate-spin -ml-1 mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    )}
    <slot />
  </div>
)}