---
// Components
import NavLink from '../../ui/buttons/NavLink.astro'
import Image from 'astro/components/Image.astro'
import { getNavigationItems } from '../../../config/features'
import ThemeToggle from '../../shared/theme-toggle/ThemeToggle.jsx'

// Images
import logoLM from '../../../public/images/svg/logo-LM.svg'
import logoDM from '../../../public/images/svg/logo-DM.svg'

// Icons
import { Icon } from 'astro-icon/components'

// Javascript
const pathname = new URL(Astro.request.url).pathname
const currentPath = pathname.slice(1)
const colourModePath = currentPath === 'experiments' ? logoDM : logoLM

// Get navigation items based on feature flags
const navigationItems = getNavigationItems()
---

<nav class='w-full fixed z-50 top-0 px-4 md:px-8 py-4 md:py-8 bg-zinc-500'>
  <div class='flex items-center justify-between'>
    <div class='flex items-center space-x-8'>
      <a href='/' class='text-xl font-bold text-white'> Daniel Shires </a>
      <div class='hidden md:flex space-x-6'>
        {
          navigationItems.map((item) => (
            <NavLink href={item.href} path={item.path} target=''>
              {item.label}
            </NavLink>
          ))
        }
      </div>
    </div>
    <div class='flex items-center space-x-4'>
      <ThemeToggle client:load />
    </div>
  </div>
</nav>

<script is:inline>
  function init() {
    // Elements
    const hamburgerIcon = document.getElementById('hamburger')
    const navPageLinks = document.getElementById('navPageLinks')
    const navAnchorLinks = navPageLinks.querySelectorAll('div > a')

    // When clicking on menu, reveal links
    hamburgerIcon.addEventListener('click', () => {
      // Toggle reveal when clicking on menu
      navPageLinks.classList.toggle('hidden')
      navPageLinks.classList.toggle('flex')

      // Hiding menu after clicking on link
      navAnchorLinks.forEach((link) => {
        link.addEventListener('click', () => {
          navPageLinks.classList.add('hidden')
          navPageLinks.classList.remove('flex')
        })
      })
    })

    // Clean up by destroying instances and removing event listeners
    document.addEventListener('astro:before-swap', () => {}, { once: true })
  }

  // Initialize on first load
  init()

  // Re-initialize after swapping pages
  document.addEventListener('astro:after-swap', init)
</script>
