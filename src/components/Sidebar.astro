---
interface Props {
  posts: any[]
}
const { posts = [] } = Astro.props

// Select pinned posts, fallback to top-viewed
const pinned = posts.filter((p: any) => p.pinned)
let sidebarPosts: any[] = pinned.slice(0, 3)
let title = "Editor's Picks"
if (sidebarPosts.length === 0) {
  sidebarPosts = [...posts]
    .filter((p: any) => typeof p.views === 'number')
    .sort((a: any, b: any) => (b.views || 0) - (a.views || 0))
    .slice(0, 3)
  title = 'Popular'
}
---

<aside class='w-full lg:w-80 flex-shrink-0 mt-12 lg:mt-0 lg:ml-8'>
  <div
    class='bg-white/5 dark:bg-zinc-900/5 border border-white/10 dark:border-zinc-800/10 rounded-lg p-6 theme-transition'>
    <h2 class='text-lg font-semibold mb-4 tracking-tight'>{title}</h2>
    <ul class='space-y-6'>
      {
        sidebarPosts.map((post: any) => (
          <li>
            <a href={`/journal/${post.slug.current}`} class='block group focus:outline-none'>
              <div class='text-xs text-zinc-500 dark:text-zinc-400 mb-1 font-medium'>
                {post.category}
              </div>
              <div class='font-semibold text-base group-hover:underline line-clamp-2'>
                {post.title}
              </div>
              <div class='flex items-center gap-2 text-xs text-zinc-400 dark:text-zinc-500 mt-1'>
                <span>
                  {new Date(post.publishedAt).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric',
                  })}
                </span>
                {typeof post.views === 'number' && post.views > 0 && (
                  <span>Â· {post.views} views</span>
                )}
              </div>
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</aside>

<style>
  @media (max-width: 1023px) {
    aside {
      margin-left: 0 !important;
      margin-top: 2rem !important;
      width: 100% !important;
    }
  }
</style>
