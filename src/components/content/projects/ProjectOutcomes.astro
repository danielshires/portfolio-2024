---
import Text from '../../ui/text/Text.astro';

interface Props {
  outcomes: string[] | {
    statistic: string;
    description: string;
  }[];
}

const { outcomes } = Astro.props

// Normalize outcomes to handle both string arrays and object arrays
const normalizedOutcomes = Array.isArray(outcomes)
  ? outcomes.map(outcome => {
      if (typeof outcome === 'string') {
        return { statistic: outcome, description: '' }
      }
      return outcome
    })
  : []
---

<section class="col-span-1 md:col-span-6 py-8">
  <Text variant="h4" class="pb-6">Impact</Text>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8">
    {normalizedOutcomes.map((outcome, index) => (
      <div
        class="bg-zinc-50 dark:bg-zinc-800 rounded-lg p-6 border border-zinc-200 dark:border-zinc-700 hover:border-zinc-300 dark:hover:border-zinc-600 transition-colors"
        style={`animation-delay: ${index * 0.1}s`}
      >
        <!-- Outcome Text -->
        <div class="space-y-2">
          <Text variant="h3" weight="bold" class="font-mono">{outcome.statistic}</Text>
          {outcome.description && (
            <Text variant="body" weight="medium">{outcome.description}</Text>
          )}
        </div>
      </div>
    ))}
  </div>
</section>
