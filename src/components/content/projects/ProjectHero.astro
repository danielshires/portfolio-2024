---
import { urlFor } from '../../../lib/sanity'
import type { SanityImage } from '../../../lib/sanity'
import Text from '../../ui/text/Text.astro'

interface Props {
  title: string
  subtitle?: string
  heroImage?: SanityImage
}

const { title, subtitle, heroImage } = Astro.props
---

<div class='space-y-8'>
  <!-- Hero Image -->

  <!-- Title and Subtitle -->
  <div class='space-y-4 text-left pt-16'>
    <Text variant='h1' class=''>{title}</Text>
    {
      subtitle && (
        <Text variant='h3' color='muted'>
          {subtitle}
        </Text>
      )
    }
  </div>
</div>

<script>
  import gsap from 'gsap'
  import { SplitText } from 'gsap/SplitText'

  // Register GSAP plugins
  gsap.registerPlugin(SplitText)

  function projectHeroAnimation() {
    // Check if animation has already played
    const hasPlayed = sessionStorage.getItem('hasProjectHeroPlayed')

    if (!hasPlayed) {
      const title = document.getElementById('project-title')
      const subtitle = document.getElementById('project-subtitle')

      if (!title) return

      const tl = gsap.timeline()

      // Split text for animation
      let titleSplit, subtitleSplit

      try {
        titleSplit = new SplitText(title, { type: 'lines' })
        if (subtitle) {
          subtitleSplit = new SplitText(subtitle, { type: 'lines' })
        }
      } catch (error) {
        console.warn('SplitText failed for project hero:', error)
        return
      }

      // Set initial states
      gsap.set(titleSplit.lines, {
        clipPath: 'inset(100% 0 0 0)',
        opacity: 0,
      })

      if (subtitleSplit) {
        gsap.set(subtitleSplit.lines, {
          clipPath: 'inset(100% 0 0 0)',
          opacity: 0,
        })
      }

      // Animation sequence
      tl.to(titleSplit.lines, {
        clipPath: 'inset(0% 0 0 0)',
        opacity: 1,
        duration: 0.8,
        stagger: 0.1,
        ease: 'power2.out',
      })

      if (subtitleSplit) {
        tl.to(
          subtitleSplit.lines,
          {
            clipPath: 'inset(0% 0 0 0)',
            opacity: 1,
            duration: 0.6,
            stagger: 0.05,
            ease: 'power2.out',
          },
          '-=0.3'
        )
      }

      sessionStorage.setItem('hasProjectHeroPlayed', 'true')
    }
  }

  // Run animation when page loads
  window.addEventListener('load', () => {
    requestAnimationFrame(projectHeroAnimation)
  })
</script>
