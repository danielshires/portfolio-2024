---
// Client router
import '../styles/global.css'
import '../styles/fonts.css'
import Navigation from '../components/Navigation/Navigation.astro'
import Head from './Head.astro'
import LoadingBar from '../components/LoadingBar/LoadingBar.astro'

interface Props {
  pageTitle: string
  pageDescription: string
}

const { pageTitle, pageDescription } = Astro.props

const styles = `font-sans bg-background-light text-text-light dark:bg-background-dark dark:text-text-dark antialiased mb-20`
---

<!doctype html>
<html lang='en' class='text-base'>
  <Head pageDescription={pageDescription} pageTitle={pageTitle} />
  <body class={styles}>
    <LoadingBar />
    <Navigation transition:persist />
    <main class='container mx-auto px-4 lg:px-8'>
      <slot />
    </main>
  </body>
</html>

<script>
  // Initialize theme
  const root = document.documentElement
  const savedTheme = localStorage.getItem('theme')
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches

  if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
    root.classList.add('dark')
  } else {
    root.classList.remove('dark')
  }
</script>

<style is:global>
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation: fade 0.3s ease-in-out;
    mix-blend-mode: normal;
    background-color: var(--background-color);
  }

  @keyframes fade {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  ::view-transition-old(root) {
    z-index: 1;
  }
  ::view-transition-new(root) {
    z-index: 2;
  }

  .dark::view-transition-old(root) {
    z-index: 2;
  }
  .dark::view-transition-new(root) {
    z-index: 1;
  }

  /* Prevent flash during transition */
  html {
    background-color: var(--background-color);
  }

  body {
    background-color: var(--background-color);
    transition: background-color 0.3s ease-in-out;
  }

  /* Ensure smooth color transitions */
  * {
    transition:
      background-color 0.3s ease-in-out,
      color 0.3s ease-in-out;
  }
</style>
