---
// Client router
import '../styles/global.css'
import '../styles/fonts.css'
import Navigation from '../components/layout/navigation/Navigation.astro'
import Footer from '../components/layout/Footer.astro'
import Head from './Head.astro'
import LoadingBar from '../components/ui/loading/LoadingBar.astro'
import SEO from '../components/common/SEO.astro'

interface Props {
  pageTitle: string
  pageDescription: string
  pageImage?: string
  pageUrl?: string
  pageType?: 'website' | 'article'
  children?: any
}

const { pageTitle, pageDescription, pageImage, pageType = 'website' } = Astro.props
---

<!doctype html>
<html lang='en' class='text-base'>
  <head>
    <!-- Safari Mobile Status Bar and Navigation Colors -->
    <meta name='theme-color' content='#fafafa' media='(prefers-color-scheme: light)' />
    <meta name='theme-color' content='#09090b' media='(prefers-color-scheme: dark)' />
    
    <!-- iOS Safari Status Bar Style -->
    <meta name='apple-mobile-web-app-status-bar-style' content='default' />
    <meta name='apple-mobile-web-app-capable' content='yes' />
    <meta name='apple-mobile-web-app-title' content={pageTitle} />
    <meta name='format-detection' content='telephone=no' />
    
    <!-- Critical theme initialization script -->
    <script is:inline>
      // âœ… OPTIMIZED THEME INITIALIZATION - Prevent flash on initial load
      ;(function () {
        try {
          const theme = localStorage.getItem('theme') || 
            (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light')
          
          // Apply theme immediately
          document.documentElement.classList.toggle('dark', theme === 'dark')
          
          // Set background immediately to prevent flash
          const bgColor = theme === 'dark' ? '#09090b' : '#fafafa'
          document.documentElement.style.backgroundColor = bgColor
        } catch (e) {}
      })()
    </script>
    
    <Head pageDescription={pageDescription} pageTitle={pageTitle} />
    <SEO title={pageTitle} description={pageDescription} image={pageImage} type={pageType} />
  </head>
  
  <body class='bg-zinc-50 dark:bg-zinc-950 text-zinc-900 dark:text-zinc-100 antialiased transition-colors duration-200'>
    <LoadingBar />
    <Navigation />
    <main class='container mx-auto px-8 lg:px-16 transition-fade min-h-screen'>
      <slot />
    </main>
    <Footer />
    
    <!-- Optimized application scripts -->
    <script is:inline src="/scripts/app-manager.js"></script>
  </body>
</html>

<style is:global>
  /* Optimized global styles */
  :root {
    --bg-light: #fafafa;
    --bg-dark: #09090b;
    --text-light: #18181b;
    --text-dark: #fafafa;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    transition: background-color 0.2s ease-out, color 0.2s ease-out;
  }

  /* Theme transition class for components */
  .theme-transition {
    transition: background-color 0.2s ease-out, color 0.2s ease-out, border-color 0.2s ease-out;
  }

  /* Swup transition styling - optimized */
  .transition-fade {
    transition: opacity 0.3s ease-out, transform 0.3s ease-out;
  }

  html.is-leaving .transition-fade {
    opacity: 0;
    transform: translateY(-20px);
  }

  html.is-rendering .transition-fade {
    opacity: 0;
    transform: translateY(20px);
  }

  /* Element animations - optimized */
  .animate-fade-in {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .animate-fade-in-delay-1 {
    animation-delay: 0.1s;
  }

  .animate-fade-in-delay-2 {
    animation-delay: 0.2s;
  }

  .animate-fade-in-delay-3 {
    animation-delay: 0.3s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Accessibility - Better focus management */
  .skip-link {
    position: absolute;
    top: -40px;
    left: 6px;
    background: var(--bg-dark);
    color: var(--text-dark);
    padding: 8px;
    text-decoration: none;
    z-index: 100;
  }

  .skip-link:focus {
    top: 6px;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
    
    .transition-fade {
      transition: none;
    }
  }
</style>